---
import BaseLayout from "../../layouts/BaseLayout.astro";
import Author from "../../components/Author.astro";

import { Code } from 'astro:components';

const API_URL = import.meta.env.API_URL;

export async function getStaticPaths() {
    const API_URL = import.meta.env.API_URL;
    const posts = await fetch (`${API_URL}/api/v2/posts`).then(response => response.json());

    return posts.items?.map((post) => {
            return {
                params: {slug: `${post.meta.slug}`},
                props: {postID: `${post.id}`}
            };            
        }
    )        
}


const {postID} = Astro.props;


const post  = await fetch (`${API_URL}/api/v2/posts/${postID}`).then(res => res.json());

const prog_language = post.programming_language


---
<BaseLayout pageTitle={post.title}>
    <div class="mb-20">
        <h2 class="text-3xl font-bold mb-3 text-orange-500">
            {post.title}
        </h2>
        <div class="flex flex-wrap">
            <p class="text-gray-500 mt-1 mb-5 me-3">
                <i class='bx bxs-calendar me-1'></i>
                Publicado: 
                {post.date}
            </p>
            {
                post.date != post.latest_revision_created_at ?
                    <p class="text-gray-500 mt-1 mb-2">
                        | Actualizado: 
                        {post.latest_revision_created_at}
                    </p>
                : <div></div>
            }
        </div>
        <Fragment set:html={post.intro} />
    </div>

    <div class="mb-8" >
        {
            post.body.map((item) => (
               item.type == "heading" ? <h2 class="text-2xl font-bold mb-5">{item.value}</h2>
               :item.type == "subtitle" ? <h2 class="text-xl mb-3 mt-5 font-bold italic">{item.value}</h2>
               : item.type == "paragraph" ? <p set:html={item.value}></p>
               : item.type == "image" ? <img class="w-2/3 mx-auto mt-3 mb-3" src={item.value.large.src} alt="">
               : item.type == "quote" ? <blockquote class="block italic text-xl mt-5 mb-5">{`"${item.value}"`}</blockquote>
               : item.type == "code_snippet" ? <p class="mt-5 mb-5"><Code code={item.value} lang={prog_language} theme="github-dark"/></p>
               : <div>{item.value}</div>
            ))
            
        }
    </div>

    <div class="mt-5">
        <span>Tags: </span>
        <div class="flex flex-wrap">
            {
                post.tags.map((tag) => (
                    <a href={`/tags/${tag}`} class=" me-5 mb-3 md:mb-5 font-bold text-orange-500 hover:border-b-4 hover:border-orange-600 hover:border-dashed">
                        {`#${tag}`}
                    </a>
                ))
            }
        </div> 
    </div>
    
    <Author />

    
</BaseLayout>